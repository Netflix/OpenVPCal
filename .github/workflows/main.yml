name: Python CI/CD Workflow

on:
  push:
    branches:
      - feature/ci
  pull_request:
    branches:
      - feature/ci

jobs:
  build_macos:
    runs-on: macos-latest

    steps:
      # Restore the .git directory from the cache
      - name: Cache repository
        uses: actions/cache@v3
        with:
          path: .git
          key: ${{ runner.os }}-git-${{ hashFiles('.git/HEAD') }}
          restore-keys: |
            ${{ runner.os }}-git-

      # Check out the repository without LFS support
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          lfs: false  # Disable Git LFS

      # Step 1: Set up Miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.11
          environment-file: environment.yml
          activate-environment: OpenVPCal
          miniconda-version: "latest"  # Ensure Miniconda is installed

      # Step 2: Initialize Conda
      - name: Initialize Conda
        shell: bash
        run: |
          source $HOME/miniconda/etc/profile.d/conda.sh
          conda init bash
          conda config --set auto_activate_base false

      # Step 3: Create and activate the conda environment (if not using environment.yml)
      - name: Create and activate conda environment
        shell: bash
        run: |
          source $HOME/miniconda/etc/profile.d/conda.sh
          conda create --name OpenVPCal python=3.11 -y
          conda activate OpenVPCal

      # Step 4: Install Python dependencies
      - name: Install Python dependencies
        shell: bash
        run: |
          source $HOME/miniconda/etc/profile.d/conda.sh
          conda activate OpenVPCal
          pip install -r requirements.txt

      # Step 5: Run unit tests
      - name: Run unit tests
        shell: bash
        run: |
          source $HOME/miniconda/etc/profile.d/conda.sh
          conda activate OpenVPCal
          pytest tests